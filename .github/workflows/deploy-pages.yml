name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  deploy:
    if: github.repository == 'pondpilot/pondpilot'
    runs-on: ubuntu-latest
    name: Deploy
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: |
          corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn Dependencies
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type check
        run: yarn typecheck

      - name: Lint JS/TS
        run: yarn lint:eslint

      - name: Build
        run: yarn build

      - name: Determine branch name
        id: branch-name
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "branch=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            echo "branch=main" >> $GITHUB_ENV
        shell: bash

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=pondpilot --branch=${{ steps.branch-name.outputs.branch }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }} # Enable GitHub Deployments

