name: Deploy to Cloudflare Pages

on:
  # This allows to trigger the workflow manually from the Actions tab.
  # E.g. when we push commit to main with [skip ci] in the commit message
  workflow_dispatch:
  # Production builds run directly on main
  push:
    branches:
      - main
  # PR's run on the workflow_run event for security reasons
  workflow_run:
    workflows: ['Lint, Build & Test']
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.head_branch || 'main' }}
  cancel-in-progress: true

jobs:
  # Deploy to Cloudflare Pages main site on push to main or workflow_dispatch
  test-and-build-prod:
    if: github.repository == 'pondpilot/pondpilot' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/build-and-test.yml

  deploy-prod:
    if: github.repository == 'pondpilot/pondpilot' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    name: Deploy
    needs: test-and-build-prod
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Deploy to Cloudflare Pages (prod)
        id: deploy-prod
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=pondpilot --branch=main --commit-hash=${{ github.event.workflow_run.head_sha }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # Deploy to Cloudflare Pages preview site on PR
  get_workflow_conclusion:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request'
    name: Lookup Conclusion of Workflow_Run Event
    runs-on: ubuntu-latest
    outputs:
      conclusion: ${{ steps.get_conclusion.outputs.result }}
    steps:
      - name: Get Workflow Run
        uses: actions/github-script@v7
        id: get_conclusion
        with:
          script: |
            const response = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });

            return response.data.conclusion;
          result-encoding: string

  deploy-pr:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request' && needs.get_workflow_conclusion.outputs.conclusion == 'success'
    needs: get_workflow_conclusion
    runs-on: ubuntu-latest
    name: Deploy
    permissions:
      contents: read
      deployments: write
      pull-requests: write
      checks: write
    steps:
      - name: Download Build Artifacts
        uses: dawidd6/action-download-artifact@v9
        with:
          name: build
          workflow: ${{ github.event.workflow.id }}
          run_id: ${{ github.event.workflow_run.id }}
          path: dist
          if_no_artifact_found: fail
          allow_forks: true

      - name: Deploy to Cloudflare Pages (preview)
        id: deploy-pr
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=pondpilot --branch=${{ github.event.workflow_run.head_branch }} --commit-hash=${{ github.event.workflow_run.head_sha }}
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }} # we can't use this to Enable GitHub Deployments, because it runs on main (via workflow_run), and CloudFlare actions doesn't support it

      - name: Create a check on the PR
        if: always()
        uses: actions/github-script@v7
        with:
          # Adapted from https://github.com/cloudflare/wrangler-action/blob/main/src/service/github.ts
          script: |
            // Return early if the workflow run is not a pull request
            if (context.eventName !== 'workflow_run' || context.payload.workflow_run.event !== 'pull_request') {
              return;
            }

            // Create a check on the PR
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Cloudflare Pages (preview)",
              head_sha: context.payload.workflow_run.head_sha,
              status: "completed",
              conclusion: "${{ steps.deploy-pr.conclusion }}",
            });

      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        with:
          # Adapted from https://github.com/cloudflare/wrangler-action/blob/main/src/service/github.ts
          script: |
            // Create a GitHub deployment
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.workflow_run.head_branch,
              auto_merge: false,
              description: "Cloudflare Pages (preview)",
              required_contexts: [],
              environment: "preview",
              production_environment: false,
            });

            if (deployment.status !== 201) {
             return;
            }
             
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              environment: "preview",
              environment_url: "${{ steps.deploy-pr.outputs.pages-deployment-alias-url }}",
              production_environment: false,
              log_url: "https://dash.cloudflare.com/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/view/pondpilot/${{ steps.deploy-pr.outputs.pages-deployment-id }}",
              description: "Deployed to Cloudflare Pages (preview)",
              state: "success",
              auto_inactive: false,
            });
